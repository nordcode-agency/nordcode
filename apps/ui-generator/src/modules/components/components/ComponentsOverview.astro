---
import ComponentCard from './ComponentCard.astro';
import SectionTitle from './SectionTitle.astro';
import type { SmarterSection } from './sections';
import PageHeader from '../../common/components/PageHeader.astro';
import SecondaryNav from '../../common/components/SecondaryNav.astro';
import SparkLine from '../../customComponents/SparkLine/SparkLine.astro';
import SparkLineSvelte from '../../customComponents/SparkLine/SparkLine.svelte';

interface Props {
    sections: SmarterSection[];
}

const { sections } = Astro.props;

const entries = sections.map((section) => ({
    title: section.title,
    url: `#${section.sectionId}`,
})).concat({
    title: "Custom components",
    url: '#custom-components',
})
---


<style>
.components {
    --nav-padding-inline: var(--spacing-far);
}

.comp-section {
    padding-inline: var(--spacing-far);
}

.nc-grid {
    grid-template-columns: repeat(
        var(--grid-placement, auto-fill),
        minmax(20rem, 1fr)
    );
}
</style>

<div class="components">
<PageHeader title="Components" description="User interface components with their markup and applied classes. All of these are pre-styled in our theme."></PageHeader>
<SecondaryNav entries={entries} />
{sections.map(section => (
    <section class="comp-section nc-region" id={section.sectionId}>
        <SectionTitle title={section.title} sectionId={section.sectionId} />
        <ul class="nc-list-reset nc-grid -far">
        {section.components.map(comp => (
            <li>
                <ComponentCard component={comp} />
            </li>
        ))}
        </ul>
    </section>
    ))}
    <hr>
    <section class="comp-section nc-region" id="custom-components">
    <SectionTitle title="Custom Components" sectionId="#custom-components" />
        <ul class="nc-list-reset nc-grid -far">
            <li>
                <div class="nc-card nc-flow">
                    <h3>Sparkline</h3>
                    <div class="nc-stack -near">
                        <p>This is an inline Sparkline:<SparkLine data={[5, 10, 8, 12, 7, 14, 10, 15, 9, 18, 12, 20]} label="Example SparkLine" appearance="gradient" /> </p>
                    </div>

                    <div class="nc-stack -near">
                        <p>This is an large Sparkline:</p>
                        <SparkLine data={[5, 10, 8, 12, 7, 14, 10, 15, 9, 18, 12, 20]} label="Example SparkLine" appearance="gradient" style="width: min(400px, 100%); height: auto;" />
                    </div>

                    <div class="nc-stack -near">
                        <p>This is an large Sparkline as line only:</p>
                        <SparkLine data={[5, 10, 8, 12, 7, 14, 10, 15, 9, 18, 12, 20]} label="Example SparkLine" appearance="line" style="width: min(400px, 100%); height: auto;" />
                    </div>

                    <div class="nc-stack -near">
                        <p>This is an inline Sparkline in svelte:
                            <SparkLineSvelte
                            data={[5, 10, 8, 12, 7, 14, 10, 15, 9, 18, 12, 20]}
                            label="Example SparkLine"
                            appearance="gradient"
                            client:load="svelte"
                            />
                        </p>
                    </div>
                </div>
            </li>
    </ul>
    </section>
</div>


