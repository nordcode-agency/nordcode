@layer base {
    :where(:root) {
        accent-color: var(--color-brand-primary-base);
        caret-color: var(--color-brand-primary-base);
        scrollbar-color: var(--color-text-subtle) transparent;
    }

    :where(dt) {
        font-weight: var(--font-weight-active);
        color: var(--color-text-base);
    }

    :where(dd) {
        font-weight: var(--font-weight-default);
        color: var(--color-text-base);

        &:not(:last-of-type) {
            padding-block-end: var(--control-spacing-base, 0.75em);
            border-bottom: var(--border-width-thin) solid var(--color-border-muted);
        }
    }

    :where(dl:not([class]), .nc-description-list) {
        display: grid;
        grid-template-columns: 0.25fr 0.75fr;
        inline-size: 100%;
        max-inline-size: 100%;
        align-items: flex-start;
        overflow-wrap: anywhere;
        container: description-list / inline-size;
        row-gap: var(--control-spacing-base, 0.75em);
    }

    :where(dd, dt) {
        grid-column: 1 / span 2;
        max-inline-size: var(--measure-base);
    }

    @container description-list (min-width: 30rem) {
        :where(dt) {
            grid-column: 1 / 1;
            padding-inline-end: 1em;
            padding-block-end: 0;
            min-block-size: 100%;

            &:not(:last-of-type) {
                padding-block-end: var(--control-spacing-base, 0.75em);
                border-bottom: var(--border-width-thin) solid var(--color-border-muted);
            }
        }

        :where(dd) {
            grid-column: 2 / 2;
            min-block-size: 100%;
        }
    }

    :where(small) {
        font-size: var(--font-size-small);
    }

    :where(figure) {
        border-radius: var(--border-radius-medium);

        & :where(img, picture) {
            border-start-start-radius: inherit;
            border-start-end-radius: inherit;
        }

        & :where(figcaption) {
            border-end-start-radius: inherit;
            border-end-end-radius: inherit;
            text-align: center;
        }
    }

    :where(figcaption) {
        display: block;
        color: var(--color-surface-subtle);
        background-color: var(--color-text-base);
        padding: var(--control-spacing-nearest, 0.375em) var(--control-spacing-base, 0.75em);
    }

    :where(details) {
        --p-x-details: var(--control-spacing-far, 1em);
        --p-y-details: var(--control-spacing-far, 1em);
        --b-r-details: var(--border-radius-medium);

        background-color: var(--color-surface-muted);
        border-radius: var(--b-r-details);
        /* border: var(--border-width-thin) solid var(--color-border-base); */
        padding: var(--p-y-details) var(--p-x-details);
        inline-size: 100%;
        box-shadow: 0 0 0 var(--border-width-thin) var(--color-border-base);

        & > summary {
            color: var(--color-text-base);
            background: var(--color-surface-subtle);
            font-weight: var(--font-weight-heading);
            border-radius: var(--b-r-details);
            padding: var(--p-y-details) var(--p-x-details);
            margin: calc(-1 * var(--p-y-details)) calc(-1 * var(--p-x-details));
        }

        &[open] > summary {
            border-end-start-radius: 0;
            border-end-end-radius: 0;
            margin-block-end: var(--p-y-details);
        }
    }

    .note,
    blockquote {
        padding: 0;
        padding-inline-start: var(--control-spacing-far, 1em);
        inline-size: 100%;
        color: var(--color-text-base);
        position: relative;
        margin-inline: 0;
        font-family: var(--font-family-serif);
        quotes: auto;
        font-size: var(--font-size-large);

        & p {
            max-inline-size: var(--measure-base);

            &:first-of-type:before {
                content: open-quote;
            }

            &:last-of-type:after {
                content: close-quote;
            }
        }

        & cite {
            display: block;
            font-family: var(--font-family-default);
            margin-block-start: var(--spacing-near);
            font-size: var(--font-size-base);
            max-inline-size: max-content;
            color: color-mix(
                in oklch,
                currentColor calc(var(--transparency-weaker) * 100%),
                transparent
            );
        }

        & cite:before {
            content: "—";
            margin-inline-end: var(--control-spacing-near, 0.5em);
        }
    }

    cite {
        font-family: var(--font-family-serif);
        font-style: normal;
    }

    :where(hr) {
        inline-size: 100%;
        block-size: var(--border-width-medium);
        background: var(--color-border-base);
        border-block-start: 0;
    }

    :where(h1, h2, h3, h4, h5, h6) {
        line-height: var(--line-height-small);
        color: inherit;
        max-inline-size: 100%;
        font-weight: var(--font-weight-heading);
    }

    :where(h1) {
        font-size: var(--font-size-display);
    }

    :where(h2) {
        font-size: var(--font-size-largest);
    }

    :where(h3) {
        font-size: var(--font-size-large);
    }

    :where(h4) {
        font-size: var(--font-size-base);
    }

    :where(h5) {
        font-size: var(--font-size-small);
    }

    :where(h6) {
        font-size: var(--font-size-smallest);
    }

    ::marker {
        color: var(--color-brand-primary-base);
    }

    ::selection,
    ::target-text {
        background-color: var(--color-brand-primary-base);
        color: var(--color-surface-base);
    }

    :where(a, .nc-link) {
        color: inherit;
        font-family: var(--font-family-link);
        text-decoration: underline;
        text-underline-offset: var(--control-spacing-nearest, 0.375em);
        text-decoration-thickness: from-font;
        font-weight: var(--font-weight-default);
        text-decoration-color: currentColor;
        cursor: pointer;
        letter-spacing: var(--tracking-tight);

        &:visited {
            opacity: 0.72;
        }

        &:hover {
            text-decoration-color: var(--color-brand-primary-base);
        }
    }

    :where(em, i) {
        font-family: var(--font-family-serif);
    }

    :where(strong, b) {
        font-weight: var(--font-weight-strong);
    }

    :where(dfn, var) {
        font-family: var(--font-family-mono);
        letter-spacing: var(--tracking-tight);
        font-weight: var(--font-weight-default);
    }

    :where(abbr) {
        text-decoration-color: var(--color-brand-primary-base);
        font-variant-caps: all-small-caps;
        font-variant-numeric: oldstyle-nums;
        font-size: 110%;
    }

    :where([aria-disabled="true"], .disabled, :disabled) {
        color: inherit;
        opacity: 1;
        cursor: not-allowed;
        filter: contrast(0.64) opacity(0.64);
    }

    :where(del, ins, mark, code, kbd, var) {
        padding-inline: var(--control-spacing-tiny, 0.25em);
        border-radius: var(--border-radius-small);
        line-height: inherit;
        box-decoration-break: clone;
        -webkit-box-decoration-break: clone;
    }

    :where(code, kbd, var) {
        font-family: var(--font-family-mono);
        letter-spacing: 0;
        font-weight: var(--font-weight-default);
        padding-block: var(--control-spacing-minimal, 0.125em);
        max-inline-size: fit-content;
        hyphens: none;
        tab-size: 4;
        text-align: left;
        word-spacing: normal;
        overflow-wrap: normal;
        font-style: normal;
    }

    :where(code) {
        background: var(--color-surface-subtle);
    }

    :where(var) {
        background: var(--color-brand-primary-surface);
        color: var(--color-brand-primary-emphasis);
    }

    :where(kbd) {
        background: var(--color-surface-subtle);
        border: var(--border-width-thin) solid var(--color-border-base);
        box-shadow: var(--shadow-nearest);
        font-weight: var(--font-weight-active);
    }

    :where(pre) {
        padding: var(--control-spacing-far, 1em);
        inline-size: 100%;
        overflow-x: auto;
        color: var(--color-text-base);
        border: var(--border-width-medium) solid var(--color-border-base);
        border-radius: var(--border-radius-medium);
        background: var(--color-surface-subtle);
        -webkit-overflow-scrolling: touch;

        & code {
            white-space: pre;
            border-radius: 0;
            padding: 0;
            background: none;
        }
    }

    :where(table) {
        --_nc-table-border-radius: var(--nc-table-border-radius, var(--border-radius-medium));
        inline-size: 100%;
        border-collapse: separate;
        border-spacing: 0;
        text-align: left;
        border: var(--border-width-medium) solid var(--color-border-base);
        border-radius: var(--_nc-table-border-radius);
    }

    :where(table > thead th:first-child) {
        border-start-start-radius: var(--_nc-table-border-radius);
    }

    :where(table > thead th:last-child) {
        border-start-end-radius: var(--_nc-table-border-radius);
    }

    :where(table > tfoot th:first-child) {
        border-end-start-radius: var(--_nc-table-border-radius);
    }

    :where(table > tfoot th:last-child) {
        border-end-end-radius: var(--_nc-table-border-radius);
    }

    :where(td, th) {
        padding: var(--control-spacing-near, 0.5em);
        line-height: var(--line-height-small);
        white-space: nowrap;
        font-variant-numeric: tabular-nums;
    }

    :where(td) {
        border-block-end: var(--border-width-thin) solid var(--color-border-muted);
    }

    :where(thead th) {
        border-block-end: var(--border-width-thin) solid var(--color-border-muted);
    }

    :where(tfoot th) {
        border-block-start: var(--border-width-thin) solid var(--color-border-muted);
    }

    :where(th) {
        font-weight: var(--font-weight-active);
        color: var(--color-text-muted);
        background-color: var(--color-surface-subtle);
    }

    :where(tbody tr:hover) {
        background: var(--color-brand-primary-hover);
    }

    :where(caption) {
        color: var(--color-text-base);
    }

    :where(tr:has(td) th) {
        border-block-end: var(--border-width-thin) solid var(--color-border-muted);
        border-inline-end: var(--border-width-thin) solid var(--color-border-muted);
    }

    :where(tr:last-child:has(td) th) {
        border-block-end: none;
    }

    :where(tr:last-child > td) {
        border: none;
    }

    :where(tbody tr:nth-child(even) > td) {
        background-color: var(--color-surface-muted);
    }

    :where(td, math, time[datetime*=":"]) {
        font-variant-numeric: tabular-nums lining-nums slashed-zero;
    }

    :target {
        scroll-margin-block-start: 2ex;
    }

    :where(del) {
        color: var(--color-status-danger-emphasis);
        text-decoration-color: var(--color-status-danger-emphasis);
        background: var(--color-status-danger-surface);
    }

    :where(ins) {
        color: var(--color-status-success-emphasis);
        text-decoration-color: var(--color-status-success-emphasis);
        background: var(--color-status-success-surface);
    }

    :where(mark) {
        color: var(--color-brand-primary-emphasis);
        background: var(--color-brand-primary-surface);
    }

    :where(ul, ol) {
        padding-inline-start: var(--control-spacing-farthest, 1.5em);
    }

    :where(li + li) {
        margin-block-start: var(--control-spacing-near, 0.5em);
    }

    :where(li > :is(ul, ol)) {
        margin-block-start: var(--control-spacing-near, 0.5em);
    }

    @supports (font-variant-position: sub) {
        :where(sub) {
            vertical-align: baseline;
            font-size: 100%;
            line-height: inherit;
            font-variant-position: sub;
        }
    }
    @supports (font-variant-position: super) {
        :where(sup) {
            vertical-align: baseline;
            font-size: 100%;
            line-height: inherit;
            font-variant-position: super;
        }
    }

    /*
    11. Quotes
    */

    :lang(en) > * {
        quotes: "“" "”" "‘" "’";
    }
    :lang(de) > * {
        quotes: "„" "“" "‚" "‘";
    }

    :where(q::before) {
        content: open-quote;
    }
    :where(q::after) {
        content: close-quote;
    }

    :where(.quoted p:first-of-type::before) {
        content: "“";
    }
    :where(.quoted p:last-of-type::after) {
        content: "”";
    }

    :where(.quoted p:first-of-type::before) {
        margin-inline-start: calc(-1 * var(--control-spacing-near, 0.5em));
    }
    :where(.quoted p) {
        hanging-punctuation: first last;
    }
    @supports (hanging-punctuation: first last) {
        :where(.quoted p:first-of-type::before) {
            margin-inline-start: 0;
        }
    }

    :where(.prose) {
        hyphens: auto;
        hyphenate-limit-chars: 7 4 3;
        hyphenate-limit-lines: 2;
        hyphenate-limit-zone: 8%;
        hyphenate-limit-last: always;
        text-wrap: pretty;
    }

    :where(.prose p) {
        text-wrap: pretty;
        font-variant-numeric: oldstyle-nums proportional-nums;
        max-inline-size: var(--measure-base);
    }

    :where(
            .prose pre,
            .prose code,
            .prose var,
            .prose samp,
            .prose kbd,
            .prose h1,
            .prose h2,
            .prose h3,
            .prose h4,
            .prose h5,
            .prose h6
        ) {
        hyphens: manual;
    }
}
