@layer reset {
    *,
    :after,
    :before {
        box-sizing: border-box;
    }

    :where(:not(dialog)) {
        margin: 0;
    }

    :where(:not(fieldset, progress, meter)) {
        border-width: 0;
        border-style: solid;
        background-origin: border-box;
        background-repeat: no-repeat;
    }

    @media (prefers-reduced-motion: no-preference) {
        :where(:focus-visible) {
            transition: outline-offset var(--transition-duration-short) var(--ease-2);
        }

        :where(:not(:active):focus-visible) {
            transition-duration: var(--transition-duration-base);
        }
    }

    :where(:not(:active):focus-visible) {
        outline: var(--border-width-medium) solid var(--color-brand-primary-base);
        outline-offset: 0.5em;
    }

    :where(:focus:not(:focus-visible)) {
        outline: none;
    }

    :where(:root) {
        -moz-text-size-adjust: none;
        -webkit-text-size-adjust: none;
        text-size-adjust: none;
        block-size: 100%;
        color: var(--color-text-base);
        background-color: var(--color-surface-muted);
        font-family: var(--font-family-default);
        line-height: var(--line-height-base);
        font-weight: var(--font-weight-default);
        font-size-adjust: from-font;

        interpolate-size: allow-keywords;

        font-kerning: normal;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
    }

    :where(body) {
        min-block-size: 100vh;

        text-decoration-skip-ink: auto;
        font-optical-sizing: auto;
        font-kerning: normal;
    }

    /* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
    :where(ul[role="list"], ol[role="list"]) {
        list-style: none;
    }

    /* Balance text wrapping on headings */
    :where(h1, h2, h3, h4) {
        text-wrap: balance;
    }

    /* A elements that don't have a class get default styles */
    :where(a:not([class])) {
        color: currentColor;
    }

    :where(img, svg, video, canvas, audio, iframe, embed, object) {
        display: block;
    }

    :where(img, svg, video) {
        max-inline-size: 100%;
        block-size: auto;
    }

    :where(figure) {
        display: grid;
        place-content: center;
        grid-template-rows: 1fr auto;
        gap: 0;
    }

    :where(
            a[href],
            area,
            button,
            input:not(
                    [type="text"],
                    [type="email"],
                    [type="number"],
                    [type="password"],
                    [type=""],
                    [type="tel"],
                    [type="url"]
                ),
            label[for],
            select,
            summary,
            [tabindex]:not([tabindex*="-"], pre)
        ) {
        cursor: pointer;
    }

    :where(
            a[href],
            area,
            button,
            input,
            label[for],
            select,
            summary,
            textarea,
            [tabindex]:not([tabindex*="-"])
        ) {
        touch-action: manipulation;
        -webkit-tap-highlight-color: transparent;
    }

    :where(input, button, textarea, select),
    :where(input[type="file"])::-webkit-file-upload-button {
        font: inherit;
        color: inherit;
        letter-spacing: inherit;
    }

    :where(html):has(dialog:modal) {
        scrollbar-gutter: stable;
        overflow: hidden;
    }
}
