@layer components.dialogs {
    :where(.nc-dialog) {
        --_dialog-padding-inline: var(--dialog-padding-inline, var(--spacing-base));
        --_dialog-layout-padding: var(--layout-padding, var(--spacing-base));
        --_dialog-close-size: var(--dialog-close-size, var(--control-height-base));
        --_dialog-transition-duration: var(
            --dialog-transition-duration,
            var(--transition-duration-base)
        );
        --_dialog-max-block-size: var(--dialog-max-block-size, 90dvh);
        --_dialog-max-inline-size: var(--dialog-max-inline-size, 28rem);

        --_dialog-radius: 0;
        display: block;
        z-index: var(--layer-important);
        animation: close-dialog var(--_dialog-transition-duration) cubic-bezier(0.7, 0, 1, 1)
            forwards;
        transition: opacity var(--_dialog-transition-duration) cubic-bezier(0.7, 0, 1, 1);
        position: fixed;
        inset: 0;
        border: var(--border-width-thin) solid var(--color-border-base);
        inline-size: 100dvw;
        block-size: max-content;
        max-inline-size: var(--_dialog-max-inline-size);
        max-block-size: 100dvh;
        background: var(--color-surface-base);
        margin: auto 0;
        padding: 0;
        border-radius: var(--_dialog-radius);
        overflow: clip;
        overflow-clip-margin: var(--control-spacing-far, 1em);
        pointer-events: all;

        @media (min-width: 36rem) {
            --_dialog-radius: var(--dialog-radius, var(--border-radius-medium));
            inline-size: calc(100dvw - 2 * var(--_dialog-layout-padding));
            max-block-size: var(--_dialog-max-block-size);
            margin-inline: auto;
            box-shadow: var(--shadow-medium);
        }

        &[open] {
            animation: open-dialog var(--_dialog-transition-duration) cubic-bezier(0, 0.6, 0.58, 1);
        }

        &:not([open]) {
            opacity: 0;
            pointer-events: none;
        }

        &::backdrop {
            background: rgba(0, 0, 0, 0.05);
            backdrop-filter: blur(3px);
        }

        :where(.dialog-container) {
            display: grid;
            grid-template:
                "header header" auto
                "content content" 1fr
                "footer footer" auto / 1fr 1fr;
            inline-size: 100%;
            block-size: max-content;
            max-block-size: var(--_dialog-max-block-size);
            overflow: clip;
            overflow-clip-margin: var(--control-spacing-far, 1em);

            & > *:first-child {
                border-radius: var(--_dialog-radius) var(--_dialog-radius) 0 0;
            }

            & > *:last-child {
                border-radius: 0 0 var(--_dialog-radius) var(--_dialog-radius);
            }
        }

        :where(.dialog-header) {
            grid-area: header;
            border-block-end: var(--border-width-thin) solid var(--color-border-muted);
            background-color: var(--color-surface-subtle);
            padding-inline: var(--_dialog-padding-inline);
            display: grid;
            grid-template: "title close" / 1fr var(--_dialog-close-size);
            align-items: flex-start;
            padding-block: var(--spacing-near);
            min-inline-size: calc(2 * var(--spacing-near) + var(--_dialog-close-size));
        }

        :where(.dialog-header) > button[data-closes-dialog] {
            grid-area: close;
            inline-size: var(--_dialog-close-size);
            block-size: var(--_dialog-close-size);
        }

        :where(.dialog-title) {
            font-size: var(--font-size-large);
            margin: 0;
            padding: 0;
            line-height: var(--_dialog-close-size);
            overflow-wrap: anywhere;
        }

        :where(.dialog-content) {
            grid-area: content;
            padding-inline: var(--_dialog-padding-inline);
            padding-block: var(--spacing-near);
            overflow: auto;
        }

        :where(.dialog-actions) {
            grid-area: footer;
            padding-inline: var(--_dialog-padding-inline);
            padding-block: var(--spacing-near);
            display: flex;
            justify-content: flex-end;
            align-items: flex-start;
            border-block-start: var(--border-width-thin) solid var(--color-border-muted);
            background-color: var(--color-surface-subtle);
        }
    }

    @keyframes open-dialog {
        from {
            transform: translate(0%, 100dvh) rotate(0deg);
        }

        to {
            transform: translate(0dvh, 0%) rotate(0deg);
        }
    }

    @keyframes close-dialog {
        from {
            transform: translate(0dvh, 0%) rotate(0deg);
        }

        to {
            transform: translate(0%, 100dvh) rotate(10deg);
        }
    }
}
